{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-20T22:47:11.286Z",
    "end": "2023-08-20T22:47:11.385Z",
    "duration": 99,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "34c8a132-771d-4917-ae23-66a3cb7f77f2",
      "title": "",
      "fullFile": "cypress/e2e/exercicio-api.cy.js",
      "file": "cypress/e2e/exercicio-api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bea5bfde-9edd-47a8-ae0c-6610d3f2de5b",
          "title": "Testes da Funcionalidade - API de Usu치rios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve editar um usu치rio previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade - API de Usu치rios Deve editar um usu치rio previamente cadastrado",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.internet.userName();\nconst nomeEditado = _faker.faker.internet.userName();\nconst email = _faker.faker.internet.email();\nconst emailEditado = _faker.faker.internet.email();\nconst senha = _faker.faker.internet.password();\ncy.NovoUsuario(nome, email, senha, 'true').then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `usuarios/${id}`,\n    body: {\n      nome: nomeEditado,\n      email: emailEditado,\n      password: senha,\n      administrador: \"true\"\n    }\n  });\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Registro alterado com sucesso');\n});",
              "err": {},
              "uuid": "bcdfd000-a7d3-4b5a-9fd4-dd36dcf264bd",
              "parentUUID": "bea5bfde-9edd-47a8-ae0c-6610d3f2de5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcdfd000-a7d3-4b5a-9fd4-dd36dcf264bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 84,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}